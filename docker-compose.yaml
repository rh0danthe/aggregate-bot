version: '3.3'
services:
  database:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: 'lostfound_admin'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DB: 'lostfound_bot'
    networks:
      - backend
    ports:
      - "5432:5432"
    volumes:
      - database-pg:/var/lib/postgresql/data
  
  api:
    build:
      context: ./backend
      dockerfile: ./backend/Dockerfile
    networks:
      - backend
    ports:
      - "8080:80"
    depends_on:
      - database
      - nginx
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 1024M
    environment:
    - ASPNETCORE_ENVIRONMENT=Production
  
  bot:
    build:
      context: ./tg-bot
      dockerfile: Dockerfile
    ports:
      - "5466:5455"
    depends_on:
      - api
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 1024M
  
  nlp:
    build:
      context: ./nlp
      dockerfile: Dockerfile
    ports:
      - "5068:5068"
    restart: always
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 1024M
  
  nginx:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    networks:
      - backend
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

networks:
  backend:
    driver: bridge

volumes:
  database-pg: